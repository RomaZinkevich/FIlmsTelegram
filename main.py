import telebot
from telebot import types
import sqlite3
import datetime


TOKEN = '1820942989:AAFyDaAORsTc7Hy2gYT1mscO1vbZlB4KcH4'
bot = telebot.TeleBot(TOKEN)

markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
item = types.KeyboardButton("–ó–∞–∫–∞–∑–∞—Ç—å —Ñ–∏–ª—å–º üé•")
markup.add(item)

admin_markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
item1 = types.KeyboardButton("–ó–∞–∫–∞–∑–∞—Ç—å —Ñ–∏–ª—å–º üé•")
item2 = types.KeyboardButton("–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–∫–∞–∑—ã üíæ")
item3 = types.KeyboardButton("–°–æ–∑–¥–∞—Ç—å —Ç–µ–∫—Å—Ç ‚úâÔ∏è")
item4 = types.KeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ë–î üìù")
item5 = types.KeyboardButton("–£–¥–∞–ª–∏—Ç—å —Ñ–∏–ª—å–º –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö ‚ùå")
item6 = types.KeyboardButton("–ù–∞—á–∞—Ç—å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã üë∑üèª‚Äç‚ôÇÔ∏è")
item7 = types.KeyboardButton("–ó–∞–∫–æ–Ω—á–∏—Ç—å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã üë∑üèª‚Äç‚ôÇÔ∏è")
admin_markup.add(item1, item2, item3, item4, item5, item6, item7)

date_markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
item1 = types.KeyboardButton("–î–µ–Ω—å")
item2 = types.KeyboardButton("–ù–µ–¥–µ–ª—è")
item3 = types.KeyboardButton("–ú–µ—Å—è—Ü")
date_markup.add(item1, item2, item3)

OFFER = '–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–º–æ—á—å –Ω–∞—à–µ–º—É –∫–∞–Ω–∞–ª—É –≤ —Ä–∞–∑–≤–∏—Ç–∏–∏ –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—É—é —Å—É–º–º—É –Ω–∞ –∫–∞—Ä—Ç—É ‚û°Ô∏è \n4274 3200 7290 8869'


@bot.message_handler(commands=['start'])
def welcome(message):
    if message.from_user.id in [322846366, 1042144066]:
        bot.send_message(
            message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω–æ –∏–∑ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∏–∂–µ ‚¨áÔ∏è', reply_markup=admin_markup)
    else:
        bot.send_message(
            message.chat.id, '–ü—Ä–∏–≤–µ—Ç, —á—Ç–æ–±—ã –∑–∞–∫–∞–∑–∞—Ç—å —Ñ–∏–ª—å–º –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ ‚¨áÔ∏è', reply_markup=markup)


@bot.message_handler(commands=['delete'])
def welcome(message):
    if message.from_user.id in [322846366, 1042144066]:
        try:
            film_id = message.text[8:]

            con = sqlite3.connect("db.db")
            cur = con.cursor()

            last_film = cur.execute(
                "SELECT * FROM films ORDER BY id").fetchall()
            last_film = last_film[-1]
            last_id, name, votes, dates = last_film
            if last_id < int(film_id):
                bot.send_message(message.chat.id, "–¢–∞–∫–æ–≥–æ id –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                return 0
            cur.execute("DELETE FROM films WHERE id=?", (film_id,))
            if last_id > int(film_id):
                cur.execute("DELETE FROM films WHERE id=?", (last_id,))
                cur.execute("INSERT INTO films VALUES (?,?,?,?)",
                            (film_id, name, votes, dates))

            res = cur.execute(
                "SELECT * FROM users").fetchall()
            last_id = str(last_id)
            deletable = film_id
            for i in res:
                if deletable in str(i[1]).split(";"):
                    films = str(i[1])
                    last_id_check = str(i[1]).split(";")[-1]
                    first_id_check = str(i[1]).split(";")[0]
                    if last_id not in str(i[1]).split(";"):
                        last_id = deletable
                    if last_id != last_id_check:
                        films = films.replace(f'{last_id};', '')
                    elif last_id_check == first_id_check:
                        films = films.replace(f'{last_id}', '')
                    else:
                        films = films.replace(f';{last_id}', '')

                elif last_id in str(i[1]).split(";"):
                    films = str(i[1])
                    films = films.replace(f'{last_id}', '')
                if films:
                    cur.execute(
                        "UPDATE users SET films=? WHERE id=?", (films, i[0]))
                else:
                    cur.execute(
                        "DELETE FROM users WHERE id=?", (i[0],))
            con.commit()
            con.close()
            bot.send_message(
                message.chat.id, "–£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ", reply_markup=admin_markup)
        except:
            bot.send_message(
                message.chat.id, "–¢—ã –¥—É—Ä–∞–∫?", reply_markup=admin_markup)


@bot.message_handler(content_types=['text'])
def write(message):
    text = message.text
    try:
        is_admin = message.from_user.id in [322846366, 1042144066]
        cur_markup = markup

        con = sqlite3.connect("db.db")
        cur = con.cursor()
        is_works = cur.execute("SELECT flag FROM works").fetchone()[0]
        if is_works and not is_admin:
            bot.send_message(
                message.chat.id, '–ò–¥—É—Ç —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã üë∑üèª‚Äç‚ôÇÔ∏è. –ù–∞–ø–∏—à–∏—Ç–µ –ø–æ–∑–∂–µ')
            return 0
        con.close()

        if is_admin:
            cur_markup = admin_markup
            if text == '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–∫–∞–∑—ã üíæ':
                bot.send_message(
                    message.chat.id, '–ó–∞ –∫–∞–∫–æ–π –ø–µ—Ä–∏–æ–¥ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–∫–∞–∑—ã?',
                    reply_markup=date_markup)
                return 0
            elif text == "–°–æ–∑–¥–∞—Ç—å —Ç–µ–∫—Å—Ç ‚úâÔ∏è":
                bot.send_message(
                    message.chat.id, '–§–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å: ‚úâÔ∏è{–ù–∞–∑–≤–∞–Ω–∏–µ};{–ì–æ–¥};{–†–µ–π—Ç–∏–Ω–≥ –∫–∏–Ω–æ–ø–æ–∏—Å–∫–∞};{–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å};{–ü–µ—Ä–µ–≤–æ–¥};{–ñ–∞–Ω—Ä};{–í–æ–∑—Ä–∞—Å—Ç};{–†–µ–∂–∏—Å—Å—ë—Ä};{–í —Ä–æ–ª—è—Ö};{–û–ø–∏—Å–∞–Ω–∏–µ}\n')
                return 0
            elif text[0] == '‚úâ':
                text = text[1:]
                text = text.split(';')
                name, year, rate, time, translate, genre, age, rezh, roles, desc = text
                bot.send_message(
                    message.chat.id, f'''üé• {name} üé•
üìÜ –ì–æ–¥: {year} üìÜ
üìä –ö–∏–Ω–æ–ø–æ–∏—Å–∫: {rate} üìä
‚è∞ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {time} ‚è∞
üé§ –ü–µ—Ä–µ–≤–æ–¥: {translate} üé§
üíæ –ñ–∞–Ω—Ä: {genre} üíæ
üë®‚Äçüë©‚Äçüë¶ –í–æ–∑—Ä–∞—Å—Ç: {age} üë®‚Äçüë©‚Äçüë¶
üôç‚Äç‚ôÇÔ∏è–†–µ–∂–∏—Å—Å—ë—Ä: {rezh} üôç‚Äç‚ôÇÔ∏è
üë®‚Äçüë®‚Äçüë¶‚Äçüë¶ –í —Ä–æ–ª—è—Ö: {roles} üë®‚Äçüë®‚Äçüë¶‚Äçüë¶

‚úâÔ∏è –û–ø–∏—Å–∞–Ω–∏–µ: {desc}''', reply_markup=cur_markup)
                return 0
            elif text == '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ë–î üìù':
                f = open("db.db", "rb")
                bot.send_document(message.chat.id, f)
                return 0
            elif text in ["–î–µ–Ω—å", "–ù–µ–¥–µ–ª—è", "–ú–µ—Å—è—Ü"]:
                now = datetime.datetime.now()
                month = now.month
                day = now.day
                delta = datetime.timedelta(days=0)
                if text == '–î–µ–Ω—å':
                    delta = datetime.timedelta(days=1)
                elif text == '–ù–µ–¥–µ–ª—è':
                    delta = datetime.timedelta(weeks=1)
                then = now - delta
                then_day, then_month, then_year = then.day, then.month, then.year
                if text == '–ú–µ—Å—è—Ü':
                    then_month = month - 1
                    if then_month <= 0:
                        then_month = 12
                        then_year = then.year - 1
                d1 = datetime.date(now.year, now.month, now.day)
                d2 = datetime.date(then_year, then_month, then_day)
                d3 = d1 - d2
                prev_dates = []
                for i in range(d3.days + 1):
                    dt = d2 + datetime.timedelta(i)
                    prev_dates.append(str(dt.month) + '-' + str(dt.day))
                con = sqlite3.connect("db.db")
                cur = con.cursor()
                res = cur.execute(
                    "SELECT name,votes,dates,id FROM films").fetchall()
                con.close()
                results = {}
                names = []
                ids = []
                for i in prev_dates:
                    for j in res:
                        if i in j[2] and j[0] not in results:
                            results[j[0], j[3]] = j[1]
                text = ''
                if results:
                    results = sorted(results.items(), key=lambda x: x[1])
                    for i in results:
                        text += str(i[0][1]) + " " * (6 - len(str(i[0][1]))) + "|  " + str(i[1]) + " " * (6 - len(str(i[1]))) + \
                            "| " + i[0][0] + " " * \
                            (13 - len(i[0][0])) + '\n'
                    bot.send_message(
                        message.chat.id, "<pre><b>ID" + " " * 4 + "| " "–ì–æ–ª–æ—Å–∞" + " " + "| " + "–ù–∞–∑–≤–∞–Ω–∏–µ\n" + "-" * 6 + "+" + "-" * 8 + "+" + "-" * 15 + "\n" + text + "</b></pre>", reply_markup=cur_markup, parse_mode='HTML')
                else:
                    bot.send_message(
                        message.chat.id, "–ó–∞–∫–∞–∑–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç", reply_markup=cur_markup)
                return 0
            elif text == "–ù–∞—á–∞—Ç—å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã üë∑üèª‚Äç‚ôÇÔ∏è":
                con = sqlite3.connect("db.db")
                cur = con.cursor()
                flag = cur.execute("SELECT flag FROM works").fetchone()[0]
                if not flag:
                    cur.execute("UPDATE works SET flag=1")
                    bot.send_message(
                        message.chat.id, "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã –Ω–∞—á–∞—Ç—ã")
                else:
                    bot.send_message(
                        message.chat.id, "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã —É–∂–µ –Ω–∞—á–∞—Ç—ã")
                con.commit()
                con.close()
                return 0
            elif text == "–ó–∞–∫–æ–Ω—á–∏—Ç—å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã üë∑üèª‚Äç‚ôÇÔ∏è":
                con = sqlite3.connect("db.db")
                cur = con.cursor()
                flag = cur.execute("SELECT flag FROM works").fetchone()[0]
                if flag:
                    cur.execute("UPDATE works SET flag=0")
                    bot.send_message(
                        message.chat.id, "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã –∑–∞–∫–æ–Ω—á–µ–Ω—ã")
                else:
                    bot.send_message(
                        message.chat.id, "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã –Ω–µ –Ω–∞—á–∞—Ç—ã")
                con.commit()
                con.close()
                return 0
            elif text == "–£–¥–∞–ª–∏—Ç—å —Ñ–∏–ª—å–º –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö ‚ùå":
                bot.send_message(
                    message.chat.id, '–§–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å: /delete {id —Ñ–∏–ª—å–º–∞}\n')
                return 0
        elif len(text) > 123:
            bot.send_message(
                message.chat.id, "–ù–µ –æ—á–µ–Ω—å –ø–æ—Ö–æ–∂–µ –Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞ üëÄ")
            return 0
        if "\n" in text or ';' in text:
            bot.send_message(
                message.chat.id, "–ù–µ –æ—á–µ–Ω—å –ø–æ—Ö–æ–∂–µ –Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞ üëÄ")
            return 0
        if text == "–ó–∞–∫–∞–∑–∞—Ç—å —Ñ–∏–ª—å–º üé•":
            bot.send_message(
                message.chat.id, '–§–æ—Ä–º–∞—Ç –∑–∞–∫–∞–∑–∞: {–ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞ (—Ç–æ—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å –∞—Ñ–∏—à–∏)}',
                reply_markup=types.ReplyKeyboardRemove())
        else:
            current_id = message.from_user.id
            film_title = text.lower()
            now = datetime.datetime.now()
            month = now.month
            day = now.day
            date = str(month) + '-' + str(day)
            con = sqlite3.connect("db.db")
            cur = con.cursor()
            films = cur.execute(
                "SELECT films FROM users WHERE id=?", (current_id,)).fetchone()
            bdfilms = cur.execute(
                "SELECT name FROM films").fetchall()
            film_id = cur.execute(
                "SELECT id FROM films WHERE name=?", (str(film_title),)).fetchone()
            last_id = cur.execute(
                "SELECT id FROM films").fetchall()
            if last_id:
                last_id = last_id[-1][0]
            else:
                last_id = 0
            if not film_id:
                film_id = last_id + 1
            else:
                film_id = film_id[0]
            if not films:
                cur.execute("INSERT INTO users VALUES (?, ?)",
                            (current_id, film_id))
                add_film(current_id, film_title, date, bdfilms, cur, film_id)
                bot.send_message(
                    message.chat.id, "–í–∞—à —Ñ–∏–ª—å–º –¥–æ–±–∞–≤–ª–µ–Ω –≤ –æ—á–µ—Ä–µ–¥—å‚ùóÔ∏è", reply_markup=cur_markup)
                bot.send_message(
                    message.chat.id, OFFER)
            else:
                films = str(films[0])
                if str(film_id) in films.split(';'):
                    bot.send_message(
                        message.chat.id, '–ò–∑–≤–∏–Ω–∏—Ç–µ, –≤—ã —É–∂–µ –≥–æ–ª–æ—Å–æ–≤–∞–ª–∏ –∑–∞ —ç—Ç–æ—Ç —Ñ–∏–ª—å–º, –Ω–æ –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–æ–π', reply_markup=cur_markup)
                else:
                    mass_films = ''
                    for i in films.split(';'):
                        mass_films += i + ';'
                    mass_films += str(film_id)
                    cur.execute("UPDATE users SET films=? WHERE id=?",
                                (mass_films, current_id))
                    add_film(current_id, film_title,
                             date, bdfilms, cur, film_id)
                    bot.send_message(
                        message.chat.id, "–í–∞—à —Ñ–∏–ª—å–º –¥–æ–±–∞–≤–ª–µ–Ω –≤ –æ—á–µ—Ä–µ–¥—å‚ùóÔ∏è", reply_markup=cur_markup)
                    bot.send_message(
                        message.chat.id, OFFER)
            con.commit()
            con.close()
    except exception as e:
        bot.send_message(
            message.chat.id, f'–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫',
            reply_markup=types.ReplyKeyboardRemove())
        bot.send_message(
            322846366, f'–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, —Ç—ã –¥—É—Ä–∞—á3–∫',
            reply_markup=types.ReplyKeyboardRemove())


def add_film(current_id, film_title, date, bdfilms, cur, film_id):
    if not bdfilms:
        cur.execute("INSERT INTO films VALUES (?, ?, ?, ?)",
                    (film_id, film_title, 1, date))
    elif (film_title,) not in bdfilms:
        cur.execute("INSERT INTO films VALUES (?, ?, ?, ?)",
                    (film_id, film_title, 1, date))
    else:
        dates = cur.execute("SELECT dates,votes FROM films WHERE name=?", (film_title,)).fetchone(
        )
        new_dates, votes = dates
        new_dates = new_dates + ';' + date
        votes = int(votes) + 1
        cur.execute("UPDATE films SET votes=?,dates=? WHERE name=?",
                    (votes, new_dates, film_title))


bot.polling(none_stop=True)

# {'content_type': 'text', 'id': 442, 'message_id': 442, 'from_user': {'id': 1042144066, 'is_bot': False, 'first_name': 'Max', 'username': None, 'last_name': 'Old', 'language_code': 'ru', 'can_join_groups': None, 'can_read_all_group_messages': None, 'supports_inline_queries': None}, 'date': 1626471987, 'chat': {'id': 1042144066, 'type': 'private', 'title': None, 'username': None, 'first_name': 'Max', 'last_name': 'Old', 'photo': None, 'bio': None, 'description': None, 'invite_link': None, 'pinned_message': None, 'permissions': None, 'slow_mode_delay': None, 'sticker_set_name': None, 'can_set_sticker_set': None, 'linked_chat_id': None, 'location': None}, 'forward_from': None, 'forward_from_chat': None, 'forward_from_message_id': None, 'forward_signature': None, 'forward_sender_name': None, 'forward_date': None, 'reply_to_message': None, 'edit_date': None, 'media_group_id': None, 'author_signature': None, 'text': '/start', 'entities': [<telebot.types.MessageEntity object at 0x035A2C40>], 'caption_entities': None, 'audio': None, 'document': None, 'photo': None, 'sticker': None, 'video': None, 'video_note': None, 'voice': None, 'caption': None, 'contact': None, 'location': None, 'venue': None, 'animation': None, 'dice': None, 'new_chat_member': None, 'new_chat_members': None, 'left_chat_member': None, 'new_chat_title': None, 'new_chat_photo': None, 'delete_chat_photo': None, 'group_chat_created': None, 'supergroup_chat_created': None, 'channel_chat_created': None, 'migrate_to_chat_id': None, 'migrate_from_chat_id': None, 'pinned_message': None, 'invoice': None, 'successful_payment': None, 'connected_website': None, 'reply_markup': None, 'json': {'message_id': 442, 'from': {'id': 1042144066, 'is_bot': False, 'first_name': 'Max', 'last_name': 'Old', 'language_code': 'ru'}, 'chat': {'id': 1042144066, 'first_name': 'Max', 'last_name': 'Old', 'type': 'private'}, 'date': 1626471987, 'text': '/start', 'entities': [{'offset': 0, 'length': 6, 'type': 'bot_command'}]}}


# markup_clothes = types.ReplyKeyboardMarkup(resize_keyboard=True)
# item1 = types.KeyboardButton("–ù–∏–∑")
# item2 = types.KeyboardButton("–í–µ—Ä—Ö")
# item3 = types.KeyboardButton("–û–±—É–≤—å")
# item4 = types.KeyboardButton("–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã")
# item5 = types.KeyboardButton("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
# markup_clothes.add(item1, item2, item3, item4, item5)


# 1042144066 –ú–∞–∫—Å–∏–º–∫–∞ –®–∞–º–∏–Ω
# 322846366 –†–æ–º–∫–∞ –ó–∏–Ω–∫–µ–≤–∏—á
