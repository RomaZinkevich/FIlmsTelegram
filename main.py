import telebot
from telebot import types
import sqlite3
import datetime


# —Ç–æ–∫–µ–Ω –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π –¥–ª—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞
TOKEN = '1820942989:AAFyDaAORsTc7Hy2gYT1mscO1vbZlB4KcH4'
bot = telebot.TeleBot(TOKEN)

# –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
item = types.KeyboardButton("–ó–∞–∫–∞–∑–∞—Ç—å —Ñ–∏–ª—å–º üé•")
markup.add(item)

admin_markup = types.ReplyKeyboardMarkup(
    resize_keyboard=True)  # –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
item1 = types.KeyboardButton("–ó–∞–∫–∞–∑–∞—Ç—å —Ñ–∏–ª—å–º üé•")
item2 = types.KeyboardButton("–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–∫–∞–∑—ã üíæ")
item3 = types.KeyboardButton("–°–æ–∑–¥–∞—Ç—å —Ç–µ–∫—Å—Ç ‚úâÔ∏è")
item4 = types.KeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ë–î üìù")
item5 = types.KeyboardButton("–£–¥–∞–ª–∏—Ç—å —Ñ–∏–ª—å–º –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö ‚ùå")
item6 = types.KeyboardButton("–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã üë∑üèª‚Äç‚ôÇÔ∏è")
admin_markup.add(item1, item2, item3, item4, item5, item6)

OFFER = '–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–º–æ—á—å –Ω–∞—à–µ–º—É –∫–∞–Ω–∞–ª—É –≤ —Ä–∞–∑–≤–∏—Ç–∏–∏ –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—É—é —Å—É–º–º—É –Ω–∞ –∫–∞—Ä—Ç—É ‚û°Ô∏è \n4274 3200 7290 8869'

# –≥–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å ID –∞–¥–º–∏–Ω–æ–≤ –∫–∞–Ω–∞–ª–∞
ADMINS_ID = [322846366, 1042144066]


@bot.message_handler(commands=['start'])
def welcome(message):
    if message.from_user.id in ADMINS_ID:  # —Ä–∞–∑–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∞–¥–º–∏–Ω–æ–≤
        bot.send_message(
            message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω–æ –∏–∑ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∏–∂–µ ‚¨áÔ∏è', reply_markup=admin_markup)
    else:
        bot.send_message(
            message.chat.id, '–ü—Ä–∏–≤–µ—Ç, —á—Ç–æ–±—ã –∑–∞–∫–∞–∑–∞—Ç—å —Ñ–∏–ª—å–º –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ ‚¨áÔ∏è', reply_markup=markup)


@bot.message_handler(commands=['delete'])
def delete(message):
    if message.from_user.id in ADMINS_ID:
        try:
            con = sqlite3.connect("db.db")
            cur = con.cursor()

            # –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
            film_id = message.text[8:]
            last_film = cur.execute(
                "SELECT * FROM films ORDER BY id").fetchall()
            last_film = last_film[-1]
            last_id, name, votes, dates = last_film

            del_from_films(film_id, cur, last_id, name, votes, dates, message)
            last_id = str(last_id)
            del_from_users(film_id, cur, last_id, name, votes, dates, message)

            con.commit()
            con.close()
            bot.send_message(
                message.chat.id, "–£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ", reply_markup=admin_markup)
        except exception as e:
            bot.send_message(
                message.chat.id, "–¢—ã –¥—É—Ä–∞–∫?", reply_markup=admin_markup)


@bot.message_handler(commands=['tech_works'])
def tech_works(message):
    if message.from_user.id in ADMINS_ID:
        try:
            con = sqlite3.connect("db.db")
            cur = con.cursor()
            text = message.text[12:]
            flag = cur.execute("SELECT flag FROM works").fetchone()[0]

            if text == 'start':  # –ø—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –∏–º–µ–Ω–Ω–æ –¥–µ–ª–∞—Ç—å
                start = 1
            elif text == "end":
                start = 0

            if flag != start:  # –µ—Å–ª–∏ —Ä–∞–±–æ—Ç—ã –≤ —Ç–æ–º –∂–µ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –≤ –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–æ—Å—è—Ç –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –±–æ—Ç –Ω–∏—á–µ–≥–æ –Ω–µ –ø–∏—à–µ—Ç
                flag = abs(flag - 1)
                cur.execute("UPDATE works SET flag=?", (flag,))

                msg = "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã –∑–∞–∫–æ–Ω—á–µ–Ω—ã"
                if flag:  # –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –Ω–∞–ø–∏—Å–∞–Ω–∏–µ –∞–¥–º–∏–Ω—É
                    msg = "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã –Ω–∞—á–∞—Ç—ã"
                bot.send_message(
                    message.chat.id, "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã –Ω–∞—á–∞—Ç—ã")

            con.commit()
            con.close()
        except exception as e:
            bot.send_message(
                message.chat.id, "–¢—ã –¥—É—Ä–∞–∫?", reply_markup=admin_markup)


@bot.message_handler(commands=['text'])  # –∫—Ä–∞—Å–∏–≤–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞
def text(message):
    if message.from_user.id in ADMINS_ID:
        try:
            text = text[1:]
            text = text.split(';')
            name, year, rate, time, translate, genre, age, rezh, roles, desc = text
            bot.send_message(
                message.chat.id, f'üé• {name} üé•\nüìÜ –ì–æ–¥: {year} üìÜ\nüìä –ö–∏–Ω–æ–ø–æ–∏—Å–∫: {rate} üìä\n\
                ‚è∞ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {time} ‚è∞\nüé§ –ü–µ—Ä–µ–≤–æ–¥: {translate} üé§\nüíæ –ñ–∞–Ω—Ä: {genre} \
                üíæ\nüë®‚Äçüë©‚Äçüë¶ –í–æ–∑—Ä–∞—Å—Ç: {age} üë®‚Äçüë©‚Äçüë¶\nüôç‚Äç‚ôÇÔ∏è–†–µ–∂–∏—Å—Å—ë—Ä: {rezh} üôç‚Äç‚ôÇÔ∏è\nüë®‚Äçüë®‚Äçüë¶‚Äçüë¶ –í —Ä–æ–ª—è—Ö: {roles} üë®‚Äçüë®‚Äçüë¶‚Äçüë¶\n\
                \n‚úâÔ∏è –û–ø–∏—Å–∞–Ω–∏–µ: {desc}', reply_markup=cur_markup)
        except exception as e:
            bot.send_message(
                message.chat.id, "–¢—ã –¥—É—Ä–∞–∫?", reply_markup=admin_markup)


@bot.message_handler(commands=['offers'])
def day(message):
    if message.from_user.id in ADMINS_ID:
        try:
            text = message.text[8:]
            results, names, ids, prev_dates, text = {}, [], [], [], ''

            # –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–ª—è –±—É–¥—É—â–µ–π —Ä–∞–±–æ—Ç—ã
            now = datetime.datetime.now()
            month = now.month
            day = now.day

            # –ø–æ–¥–±–æ—Ä–∫–∞ –Ω—É–∂–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ –≤–≤–µ–¥–µ–Ω–Ω—ã–º –¥–∞–Ω–Ω—ã–º
            delta = datetime.timedelta(days=0)
            if text == 'day':
                delta = datetime.timedelta(days=1)
            elif text == 'week':
                delta = datetime.timedelta(weeks=1)

            prev = now - delta
            prev_day, prev_month, prev_year = prev.day, prev.month, prev.year

            if text == 'month':
                prev_month = month - 1
                if prev_month <= 0:  # —Ü–∏–∫–ª–∏—á–Ω–æ—Å—Ç—å –º–µ—Å—è—Ü–µ–≤
                    prev_month = 12
                    prev_year = prev.year - 1

            # –ø–µ—Ä–µ–≤–æ–¥ –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –≤ datetime –º–æ–¥–µ–ª—å
            now_dt = datetime.date(now.year, now.month, now.day)
            # –ø–µ—Ä–µ–≤–æ–¥ –æ—Ç—Å—á–∏—Ç–∞–Ω–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –≤ datetime –º–æ–¥–µ–ª—å
            prev_dt = datetime.date(prev_year, prev_month, prev_day)
            range_dt = now_dt - prev_dt

            # –ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–∞—Ç –º–µ–∂–¥—É –Ω–∞—Å—Ç–æ–π—â–∏–º –∏ –æ—Ç—Å—á–∏—Ç–∞–Ω–Ω—ã–º –≤—Ä–µ–º–µ–Ω–µ–º
            for i in range(range_dt.days + 1):
                dt = prev_dt + datetime.timedelta(i)
                # –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –¥–∞—Ç –≤ —É–¥–æ–±–Ω–æ–µ –¥–ª—è –ë–î —Ñ–æ—Ä–º–∞—Ç
                prev_dates.append(str(dt.month) + '-' + str(dt.day))

            con = sqlite3.connect("db.db")
            cur = con.cursor()
            res = cur.execute(
                "SELECT name,votes,dates,id FROM films").fetchall()
            con.close()

            for i in prev_dates:
                for j in res:
                    # –ø—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ–ª–æ—Å–æ–≤–∞–ª–∏ –ª–∏ –∑–∞ —Ñ–∏–ª—å–º + –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Ñ–∏–ª—å–º –≤ –∏—Å—Ö–æ–¥–Ω–æ–º —Å–ª–æ–≤–∞—Ä–µ
                    if i in j[2] and j[0] not in results:
                        # –∏—Å—Ö–æ–¥–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å —Å –Ω—É–∂–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è –±—ã—Å—Ç—Ä–æ–π —Ä–∞–±–æ—Ç—ã –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–µ
                        results[j[0], j[3]] = j[1]

            if results:
                # —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Ñ–∏–ª—å–º–æ–≤ –ø–æ –∫–æ–ª-–≤—É –≥–æ–ª–æ—Å–æ–≤ –∑–∞ –Ω–∏—Ö (–≤–æ–∑—Ä.)
                results = sorted(results.items(), key=lambda x: x[1])
                for i in results:
                    text += str(i[0][1]) + " " * (6 - len(str(i[0][1]))) + "|  " + str(i[1]) + " " * (6 - len(str(i[1]))) + \
                        "| " + i[0][0] + " " * \
                        (13 - len(i[0][0])) + '\n'
                text = "<pre><b>ID" + " " * 4 + "| " "–ì–æ–ª–æ—Å–∞" + " " + "| " + "–ù–∞–∑–≤–∞–Ω–∏–µ\n" + \
                    "-" * 6 + "+" + "-" * 8 + "+" + "-" * 15 + "\n" + text + "</b></pre>"
                # –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ —É–¥–æ–±–Ω—É—é –¥–ª—è –≤–æ—Å–ø—Ä–∏—è—Ç–∏—è —Ç–∞–±–ª–∏—Ü—É

                bot.send_message(
                    message.chat.id, text, reply_markup=admin_markup, parse_mode='HTML')
            else:
                bot.send_message(
                    message.chat.id, "–ó–∞–∫–∞–∑–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç", reply_markup=admin_markup)
        except exception as e:
            bot.send_message(
                message.chat.id, "–¢—ã –¥—É—Ä–∞–∫?", reply_markup=admin_markup)


@bot.message_handler(content_types=['text'])
def write(message):
    text = message.text
    try:
        is_admin = message.chat.id in ADMINS_ID
        con = sqlite3.connect("db.db")
        cur = con.cursor()
        is_works = cur.execute("SELECT flag FROM works").fetchone()[0]
        if is_works and not is_admin:
            bot.send_message(
                message.chat.id, '–ò–¥—É—Ç —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã üë∑üèª‚Äç‚ôÇÔ∏è. –ù–∞–ø–∏—à–∏—Ç–µ –ø–æ–∑–∂–µ')
            return 0
        con.close()
        cur_markup = markup
        if is_admin:  # —Ñ—É–Ω–∫—Ü–∏–∏ –∞–¥–º–∏–Ω–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–æ–º
            cur_markup = admin_markup
            if text == '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–∫–∞–∑—ã üíæ':
                bot.send_message(
                    message.chat.id, '–§–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å: \
                    {/offers day/week/month}')
                return 0
            elif text == "–°–æ–∑–¥–∞—Ç—å —Ç–µ–∫—Å—Ç ‚úâÔ∏è":
                bot.send_message(
                    message.chat.id, '–§–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å: /text{–ù–∞–∑–≤–∞–Ω–∏–µ}\
                    ;{–ì–æ–¥};{–†–µ–π—Ç–∏–Ω–≥ –∫–∏–Ω–æ–ø–æ–∏—Å–∫–∞};{–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å};{–ü–µ—Ä–µ–≤–æ–¥};\
                    {–ñ–∞–Ω—Ä};{–í–æ–∑—Ä–∞—Å—Ç};{–†–µ–∂–∏—Å—Å—ë—Ä};{–í —Ä–æ–ª—è—Ö};{–û–ø–∏—Å–∞–Ω–∏–µ}\n')
                return 0
            elif text == '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ë–î üìù':
                send_bd(message)
                return 0
            elif text == "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã üë∑üèª‚Äç‚ôÇÔ∏è":
                bot.send_message(
                    message.chat.id, "–§–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å: {/tech_works start/end}")
                return 0
            elif text == "–£–¥–∞–ª–∏—Ç—å —Ñ–∏–ª—å–º –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö ‚ùå":
                bot.send_message(
                    message.chat.id, '–§–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å: /delete {id —Ñ–∏–ª—å–º–∞}\n')
                return 0
        # –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ —Ñ–∏–ª—å–º–∞
        if len(text) > 123 or "\n" in text or ';' in text:
            bot.send_message(
                message.chat.id, "–ù–µ –æ—á–µ–Ω—å –ø–æ—Ö–æ–∂–µ –Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞ üëÄ")
            return 0

        if text == "–ó–∞–∫–∞–∑–∞—Ç—å —Ñ–∏–ª—å–º üé•":
            bot.send_message(
                message.chat.id, '–§–æ—Ä–º–∞—Ç –∑–∞–∫–∞–∑–∞: {–ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞ (—Ç–æ—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å –∞—Ñ–∏—à–∏)}',
                reply_markup=types.ReplyKeyboardRemove())
        else:
            make_offer()

            # current_id = message.from_user.id
            # film_title = text.lower()
            # now = datetime.datetime.now()
            # month = now.month
            # day = now.day
            # date = str(month) + '-' + str(day)
            # con = sqlite3.connect("db.db")
            # cur = con.cursor()
            # films = cur.execute(
            #     "SELECT films FROM users WHERE id=?", (current_id,)).fetchone()
            # bdfilms = cur.execute(
            #     "SELECT name FROM films").fetchall()
            # film_id = cur.execute(
            #     "SELECT id FROM films WHERE name=?", (str(film_title),)).fetchone()
            # last_id = cur.execute(
            #     "SELECT id FROM films").fetchall()
            # if last_id:
            #     last_id = last_id[-1][0]
            # else:
            #     last_id = 0
            # if not film_id:
            #     film_id = last_id + 1
            # else:
            #     film_id = film_id[0]
            # if not films:
            #     cur.execute("INSERT INTO users VALUES (?, ?)",
            #                 (current_id, film_id))
            #     add_film(current_id, film_title, date, bdfilms, cur, film_id)
            #     bot.send_message(
            #         message.chat.id, "–í–∞—à —Ñ–∏–ª—å–º –¥–æ–±–∞–≤–ª–µ–Ω –≤ –æ—á–µ—Ä–µ–¥—å‚ùóÔ∏è", reply_markup=cur_markup)
            #     bot.send_message(
            #         message.chat.id, OFFER)
            # else:
            #     films = str(films[0])
            #     if str(film_id) in films.split(';'):
            #         bot.send_message(
            #             message.chat.id, '–ò–∑–≤–∏–Ω–∏—Ç–µ, –≤—ã —É–∂–µ –≥–æ–ª–æ—Å–æ–≤–∞–ª–∏ –∑–∞ —ç—Ç–æ—Ç —Ñ–∏–ª—å–º, –Ω–æ –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–æ–π', reply_markup=cur_markup)
            #     else:
            #         mass_films = ''
            #         for i in films.split(';'):
            #             mass_films += i + ';'
            #         mass_films += str(film_id)
            #         cur.execute("UPDATE users SET films=? WHERE id=?",
            #                     (mass_films, current_id))
            #         add_film(current_id, film_title,
            #                  date, bdfilms, cur, film_id)
            #         bot.send_message(
            #             message.chat.id, "–í–∞—à —Ñ–∏–ª—å–º –¥–æ–±–∞–≤–ª–µ–Ω –≤ –æ—á–µ—Ä–µ–¥—å‚ùóÔ∏è", reply_markup=cur_markup)
            #         bot.send_message(
            #             message.chat.id, OFFER)
            # con.commit()
            # con.close()
    except exception as e:
        bot.send_message(
            message.chat.id, f'–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫',
            reply_markup=types.ReplyKeyboardRemove())
        bot.send_message(
            322846366, f'–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, —Ç—ã –¥—É—Ä–∞—á3–∫',
            reply_markup=types.ReplyKeyboardRemove())  # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ–∑–¥–∞—Ç–µ–ª—é –±–æ—Ç–∞ –æ –ø–æ–ª–æ–º–∫–µ –±–æ—Ç–∞


def add_film(current_id, film_title, date, bdfilms, cur, film_id):
    if not bdfilms:
        cur.execute("INSERT INTO films VALUES (?, ?, ?, ?)",
                    (film_id, film_title, 1, date))
    elif (film_title,) not in bdfilms:
        cur.execute("INSERT INTO films VALUES (?, ?, ?, ?)",
                    (film_id, film_title, 1, date))
    else:
        dates = cur.execute("SELECT dates,votes FROM films WHERE name=?", (film_title,)).fetchone(
        )
        new_dates, votes = dates
        new_dates = new_dates + ';' + date
        votes = int(votes) + 1
        cur.execute("UPDATE films SET votes=?,dates=? WHERE name=?",
                    (votes, new_dates, film_title))


def del_from_films(film_id, cur, last_id, name, votes, dates, message):
    # –µ—Å–ª–∏ ID –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–µ–Ω —É–¥–∞–ª–∏—Ç—å –º–µ–Ω—å—à–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏–∑ –ë–î –∑–Ω–∞—á–∏—Ç —É–¥–∞–ª–∏—Ç—å ID –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ
    if last_id < int(film_id):
        bot.send_message(message.chat.id, "–¢–∞–∫–æ–≥–æ id –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        return 0
    cur.execute("DELETE FROM films WHERE id=?", (film_id,))
    # –µ—Å–ª–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π ID –±–æ–ª—å—à–µ —á–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π, –Ω–∞–¥–æ –ø–æ—Å—Ç–∞–≤–∏—Ç—å —Ñ–∏–ª—å–º —Å –ø–æ—Å–ª–µ–¥–Ω–∏–º ID –Ω–∞ –º–µ—Å—Ç–æ —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ
    if last_id > int(film_id):
        cur.execute("DELETE FROM films WHERE id=?", (last_id,))
        cur.execute("INSERT INTO films VALUES (?,?,?,?)",
                    (film_id, name, votes, dates))


def del_from_users(film_id, cur, last_id, name, votes, dates, message):
    res = cur.execute(
        "SELECT * FROM users").fetchall()
    for i in res:
        deletable = film_id  # —É–¥–∞–ª—è–µ–º—ã–π ID
        films = str(i[1])
        if films:  # –ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –∂–µ–ª–∞–Ω–∏–π –ø—É—Å—Ç, —Ç–æ –∏ –Ω–µ—á–µ–≥–æ —É–¥–∞–ª—è—Ç—å
            films_list = films.split(";")
            last_user_id = 0
            first_user_id = 9999999999

            for j in films_list:  # –≤—ã–±–æ—Ä –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ ID
                j = int(j)
                if j > last_user_id:
                    last_user_id = j
                if j < first_user_id:
                    first_user_id = j
            last_user_id, first_user_id = str(last_user_id), str(first_user_id)

            # –µ—Å–ª–∏ —É–¥–∞–ª—è–µ–º—ã–π –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ –∂–µ–ª–∞–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            if deletable in films_list:
                # –µ—Å–ª–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π ID –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ –∂–µ–ª–∞–Ω–∏–π –Ω–∞–¥–æ —É–¥–∞–ª–∏—Ç—å –µ–≥–æ
                if last_id in films_list:
                    deletable = last_id

                films_list.remove(deletable)

            # –µ—Å–ª–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π ID –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ, –∞ —É–¥–∞–ª—è–µ–º–æ–≥–æ –Ω–µ—Ç, –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π
            elif last_id in films_list:
                films_list.remove(last_id)
                films_list.append(deletable)

            # –µ—Å–ª–∏ –Ω–æ–≤—ã–π –∂–µ–ª–∞–µ–º—ã–π —Å–ø–∏—Å–æ–∫ –Ω–µ –ø—É—Å—Ç–æ–π –æ–±–Ω–æ–≤–∏—Ç—å, –∏–Ω–∞—á–µ —É–¥–∞–ª–∏—Ç—å —Å—Ç—Ä–æ–∫—É —Å –¥–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
            if films_list:
                cur.execute(
                    "UPDATE users SET films=? WHERE id=?", (films, i[0]))
            else:
                cur.execute(
                    "DELETE FROM users WHERE id=?", (i[0],))


def send_bd(message):
    f = open("db.db", "rb")
    bot.send_document(message.chat.id, f)


bot.polling(none_stop=True)


# 1042144066 –ú–∞–∫—Å–∏–º–∫–∞ –®–∞–º–∏–Ω
# 322846366 –†–æ–º–∫–∞ –ó–∏–Ω–∫–µ–≤–∏—á
